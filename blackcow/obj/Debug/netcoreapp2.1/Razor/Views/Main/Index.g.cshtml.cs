#pragma checksum "C:\Users\뜸부기\Desktop\upt\TradeManager\TradeManager\Views\Main\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1ada7cc705aa418744e5d75420354cba6f470e61"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Main_Index), @"mvc.1.0.view", @"/Views/Main/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Main/Index.cshtml", typeof(AspNetCore.Views_Main_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\뜸부기\Desktop\upt\TradeManager\TradeManager\Views\_ViewImports.cshtml"
using TradeManager;

#line default
#line hidden
#line 2 "C:\Users\뜸부기\Desktop\upt\TradeManager\TradeManager\Views\_ViewImports.cshtml"
using TradeManager.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1ada7cc705aa418744e5d75420354cba6f470e61", @"/Views/Main/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e59f9eb78612990ea6c969ebe115dd63c3422068", @"/Views/_ViewImports.cshtml")]
    public class Views_Main_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("selfie"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/bcow.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            DefineSection("Scripts", async() => {
                BeginContext(18, 3881, true);
                WriteLiteral(@"
    <script>
        $(function () {
            getKRWCoinName();
        })        

        var krw_markets = '';
        var arr_kor_coinName = new Array();
        var arr_eng_coinName = new Array();
        // 모든 코인 이름 가져오기        
        function getKRWCoinName() {
            var uri = ""https://api.upbit.com/v1/market/all"";
            $.ajax({
                type: ""GET"",
                url: uri,
                cache: false,
                success: function (data) {
                    const tBody = $(""#market"");                    
                    $(tBody).empty();
                    var idx = 0;

                    $.each(data, function (key, item) {
                        // 원화 마켓 정보만 표시
                        if (item.market.substring(0, 3) == 'KRW') {
                            const tr = $(""<tr></tr>"")
                                //.append(
                                //    $(""<td id='"" + key + ""'>"" + item.korean_name + "" ("" + item.english_name + ");
                WriteLiteral(@""")</td>"").append())
                                //.append($(""<td></td>"").text(item.market));

                            arr_kor_coinName[idx] = item.korean_name;
                            arr_eng_coinName[idx] = item.english_name;
                            idx += 1;
                            
                            krw_markets += item.market + "","";
                            
                            tr.appendTo(tBody);
                        }                        
                    });
                    krw_markets = krw_markets.substr(0, krw_markets.length - 1);                    

                    todos = data;
                }
            }).done(function () {
                getAskingPriceList(krw_markets);
            }).fail(function () {
                alert('API 에러 발생');
            });
            setTimeout(getKRWCoinName, 13000);
        }

        // 코인 가격정보 가져오기
        function getAskingPriceList(krw_markets) {            
           ");
                WriteLiteral(@" var uri = ""https://api.upbit.com/v1/ticker"";
            $.ajax({
                type: ""GET"",
                url: uri,
                data: {
                    markets: krw_markets
                },
                cache: false,
                success: function (data) {
                    
                    const tBody = $(""#market"");
                    $(tBody).empty();                    
                    $.each(data, function (key, item) {
                        const tr = $(""<tr></tr>"")
                            .append(
                            $(""<td id='"" + key + ""'>"" + arr_kor_coinName[key] + "" ("" + arr_eng_coinName[key] + "")</td>"").append())
                            .append(
                                $(""<td></td>"").append(
                                    $(""<button class='buy'>매수</button>"").on(""click"", function () {
                                        buyCoin(arr_kor_coinName[key]);
                                    })
                     ");
                WriteLiteral(@"           )
                            )
                            .append(
                                $(""<td></td>"").append(
                                    $(""<button class='sell'>매도</button>"").on(""click"", function () {
                                        sellCoin(arr_kor_coinName[key]);
                                    })
                                )
                            )
                            .append(
                            $(""<td id='"" + key + ""'> 현재가: "" + item.trade_price + ""</td>"").append())
                            .append($(""<td></td>"").text(""거래량: "" + item.acc_trade_volume));

                        tr.appendTo(tBody);                        
                    });
                }
            });
        }
    </script>
");
                EndContext();
            }
            );
            BeginContext(3902, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(3904, 170, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4bfc80cff65c40aca5be8199a6c5ddd6", async() => {
                BeginContext(3910, 43, true);
                WriteLiteral("\r\n    <h2>흑우 코인 ver 1.0.0</h2>\r\n\r\n    <div>");
                EndContext();
                BeginContext(3953, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "376cf88159624e3f8c31935c576ad872", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3996, 71, true);
                WriteLiteral("</div>\r\n    <div id=\"myAsset\"></div>\r\n    <div id=\"market\"></div>    \r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
